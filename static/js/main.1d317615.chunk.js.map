{"version":3,"sources":["assets/logo1.png","assets/category.png","assets/memorize.png","assets/guess.png","assets/things.jpg","assets/sign.jpg","assets/computer.gif","assets/kecap.png","assets/hypnotist-circle.png","screen/Home.jsx","screen/Category.jsx","screen/Guess.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","category","memorize","guess","Link","to","type","Component","things","sign","computer","gambar","BrowserRouter","Home","Route","exact","path","component","Category","Things","Sign","Computer","Guess","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d317615.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.e5b61d53.png\";","module.exports = __webpack_public_path__ + \"static/media/category.127c17e1.png\";","module.exports = __webpack_public_path__ + \"static/media/memorize.87183d4d.png\";","module.exports = __webpack_public_path__ + \"static/media/guess.ef0647cd.png\";","module.exports = __webpack_public_path__ + \"static/media/things.d0feb377.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.83bc1bb8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer.a1699b8c.gif\";","module.exports = __webpack_public_path__ + \"static/media/kecap.c0d3195c.png\";","module.exports = __webpack_public_path__ + \"static/media/hypnotist-circle.3a4c508d.png\";","import React, { Component } from 'react';\r\nimport logo from './../assets/logo1.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport category from './../assets/category.png';\r\nimport memorize from './../assets/memorize.png';\r\nimport guess from './../assets/guess.png';\r\n\r\nimport './Home.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"logo\" alt=\"logo\" />\r\n          <p className=\"HowToPlayTitle\">\r\n            HOW TO PLAY?\r\n          </p>\r\n          <div className=\"HowToPlayContainer\">\r\n          <div className=\"HowToPlayImageContainer\">\r\n            <img src={category} className=\"img-thumbnail bg-dark\" />\r\n            <p className=\"text-light myThumbnailText\">Choose Category</p>\r\n          </div>\r\n          <div className=\"HowToPlayImageContainer\">\r\n          <img src={memorize} className=\"img-thumbnail bg-dark\" />\r\n            <p className=\"text-light myThumbnailText\">Memorize the image</p>\r\n          </div>\r\n          <div className=\"HowToPlayImageContainer\">\r\n            <img src={guess} className=\"img-thumbnail bg-dark\" />\r\n            <p className=\"text-light myThumbnailText\">Guess the image</p>\r\n          </div>\r\n          </div>\r\n          <Link to=\"/Category\">\r\n          <button type=\"button\" className=\"btn btn-raised btn-primary bg-light btn-lg text-dark myButton\">PLAY</button>\r\n          </Link>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport logo from './../assets/hypnotist-circle.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport things from './../assets/things.jpg';\r\nimport sign from './../assets/sign.jpg';\r\nimport computer from './../assets/computer.gif';\r\n\r\nimport './Category.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p className=\"HowToPlayTitle\">\r\n            CATEGORY\r\n          </p>\r\n          <div className=\"HowToPlayContainer\">\r\n          <Link to=\"/Guess\">\r\n          <div className=\"HowToPlayImageContainer\">\r\n            <img src={things} className=\"img-thumbnail bg-dark myImage\" />\r\n            <p className=\"text-light myThumbnailText\">THINGS</p>\r\n          </div>\r\n          </Link>\r\n          \r\n          <Link to=\"/Sign\">\r\n          <div className=\"HowToPlayImageContainer\">\r\n          <img src={sign} className=\"img-thumbnail bg-dark myImage\" />\r\n            <p className=\"text-light myThumbnailText\">SIGN</p>\r\n          </div>\r\n          </Link>\r\n\r\n          <Link to=\"/Computer\">\r\n          <div className=\"HowToPlayImageContainer\">\r\n            <img src={computer} className=\"img-thumbnail bg-dark myImage\" />\r\n            <p className=\"text-light myThumbnailText\">COMPUTER</p>\r\n          </div>\r\n          </Link>\r\n          \r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './Guess.css'; \r\nimport gambar from '../assets/kecap.png';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={gambar} className=\"img-thumbnail bg-dark myImage\"/>\r\n        <div className=\"myHintContainer\">\r\n          <div className=\"myHint\">\r\n          </div>\r\n          <div className=\"myHint\">\r\n          </div>\r\n          <div className=\"myHint\">\r\n          </div>\r\n          <div className=\"myHint\">\r\n          </div>\r\n          <div className=\"myHint\">\r\n          </div>\r\n        </div>\r\n        <div className=\"myButtonContainer\">\r\n        <div className=\"myButtonContainerChild\">\r\n          <button className=\"myButton1\">K</button>\r\n          <button className=\"myButton1\">B</button>\r\n          <button className=\"myButton1\">E</button>\r\n          <button className=\"myButton1\">C</button>\r\n          <button className=\"myButton1\">F</button>\r\n        </div>\r\n        <div className=\"myButtonContainerChild\">\r\n          <button className=\"myButton1\">D</button>\r\n          <button className=\"myButton1\">H</button>\r\n          <button className=\"myButton1\">L</button>\r\n          <button className=\"myButton1\">K</button>\r\n          <button className=\"myButton1\">C</button>\r\n        </div>\r\n        <div className=\"myButtonContainerChild\">\r\n          <button className=\"myButton1\">G</button>\r\n          <button className=\"myButton1\">I</button>\r\n          <button className=\"myButton1\">Q</button>\r\n          <button className=\"myButton1\">A</button>\r\n          <button className=\"myButton1\">Z</button>\r\n        </div>\r\n        <div className=\"myButtonContainerChild\">\r\n          <button className=\"myButton1\">M</button>\r\n          <button className=\"myButton1\">J</button>\r\n          <button className=\"myButton1\">O</button>\r\n          <button className=\"myButton1\">P</button>\r\n          <button className=\"myButton1\">R</button>\r\n        </div>\r\n        \r\n      </div>\r\n      </header>\r\n\r\n      \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\n\nimport Home from './screen/Home';\nimport Category from './screen/Category';\nimport Things from './screen/Things';\nimport Sign from './screen/Sign';\nimport Computer from './screen/Computer';\nimport Guess from './screen/Guess';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          {Home}\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/Category\" component={Category}/>\n          <Route exact path=\"/Things\" component={Things}/>\n          <Route exact path=\"/Sign\" component={Sign}/>\n          <Route exact path=\"/Computer\" component={Computer}/>\n          <Route exact path=\"/Guess\" component={Guess}/>\n        </div>\n       </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}